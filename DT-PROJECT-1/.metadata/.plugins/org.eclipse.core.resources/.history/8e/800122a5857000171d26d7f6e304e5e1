package com.bookbazaar.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FilterOutputStream;
import java.lang.ProcessBuilder.Redirect;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.bookbazaar.dao.ProductDAO;
import com.bookbazaar.model.Product;

import com.bookbazaar.dao.SupplierDAO;
import com.bookbazaar.model.Supplier;

import com.bookbazaar.dao.CategoryDAO;
import com.bookbazaar.model.Category;


import com.google.gson.Gson;

@Controller
public class AdminController {

	@Autowired
	ProductDAO productDAO;
	
	@RequestMapping("/adminhome")
	public ModelAndView adminhome()
	{
		ModelAndView mv=new ModelAndView("adminhome");
	    return mv; 
	}
	@RequestMapping("/adminlogin")
	public ModelAndView adminlogin()
	{
		ModelAndView mv=new ModelAndView("adminlogin");
	    return mv; 
	}
	@RequestMapping("/adminloginerror")
	public ModelAndView adminloginerror()
	{
		ModelAndView mv=new ModelAndView("adminloginerror");
	    return mv; 
	}
	
	@RequestMapping("/addproduct")
	public ModelAndView addpage()
	{
	    ModelAndView mv=new ModelAndView("addproduct","command",new Product());
		List<Supplier> lists=productDAO.getSupplierName();
		System.out.println("supplier "+lists);
		List<Category> listc=productDAO.getCategoryName();
		System.out.println("supplier "+listc);
		mv.addObject("lists", lists);
		mv.addObject("listc", listc);
		return mv;
	}
	
	@RequestMapping("/viewproduct")
	public ModelAndView viewpage()
	{
		ModelAndView mv=new ModelAndView("viewproduct");
		List<Product> list=productDAO.getAllProductsData();
		mv.addObject("productlist", list);
	    return mv; 
	}
	
	@RequestMapping(value="/saveproduct", method = RequestMethod.POST)
	public ModelAndView saveproduct(@ModelAttribute Product product)
	{
		String filename=null;
		byte[] arr;
		if(!product.getFile().isEmpty())
		{
			try{
		arr=product.getFile().getBytes();
		productDAO.updateProduct(product);
		System.out.println("Insert product:"+product);
		String path="E:/DT-PROJECT-1/BookBazaar/src/main/webapp/resources/pics"+product.getProductid()+".jpg";
		File f=new File(path);
		BufferedOutputStream bf=new BufferedOutputStream(new FileOutputStream(f));
		bf.write(arr);
		bf.close();
		System.out.println("Image Uploaded");
		
		}
			catch(Exception e){System.out.println(e.getMessage());}
		}
		return new ModelAndView("redirect:/viewproduct");
	}
	
	@RequestMapping("/deleteproduct/{productid}")
	public ModelAndView deleteproduct(@PathVariable String productid)
	{
		Product product=productDAO.getProductById(productid);
		productDAO.deleteProduct(product);
		return new ModelAndView("redirect:/viewproduct");
	}
	
	@RequestMapping("/editproduct/{productid}")
	public ModelAndView editproduct(@PathVariable String productid)
	{
		Product product=productDAO.getProductById(productid);
		return new ModelAndView("editproduct","command",product);
	}
	@RequestMapping("/editsave")
	public ModelAndView editsave(@ModelAttribute Product product)
	{
		productDAO.updateProduct(product);
		return new ModelAndView("redirect:/viewproduct");
	}
	
	//................. CATEGORY  MODULE ..........................
	
	@Autowired
	CategoryDAO categoryDAO;
	
	@RequestMapping("/addcategory")
	public ModelAndView addcategory()
	{
		ModelAndView mv=new ModelAndView("addcategory","command",new Category());
	    return mv; 
	}
	
	@RequestMapping("/viewcategory")
	public ModelAndView viewcategory()
	{
		ModelAndView mv=new ModelAndView("viewcategory");
		List<Category> list=categoryDAO.getAllCategoryData();
		mv.addObject("categorylist", list);
	    return mv; 
	}
	
	@RequestMapping("/savecategory")
	public ModelAndView savecategory(@ModelAttribute Category category)
	{
		categoryDAO.saveCategory(category);
		return new ModelAndView("redirect:/viewcategory");
	}
	
	@RequestMapping("/deletecategory/{categoryid}")
	public ModelAndView deletecategory(@PathVariable String categoryid)
	{
		Category category=categoryDAO.getCategoryById(categoryid);
		categoryDAO.deleteCategory(category);
		return new ModelAndView("redirect:/viewcategory");
	}
	
	@RequestMapping("/editcategory/{categoryid}")
	public ModelAndView editcategory(@PathVariable String categoryid)
	{
		Category category=categoryDAO.getCategoryById(categoryid);
		return new ModelAndView("editcategory","command",category);
	}
	@RequestMapping("/editsavecategory")
	public ModelAndView editsavecategory(@ModelAttribute Category category)
	{
		categoryDAO.updateCategory(category);
		return new ModelAndView("redirect:/viewcategory");
	}
	
	//.....................SUPPLIER MODULE ..............................
	
	
	@Autowired
	SupplierDAO supplierDAO;
	
	@RequestMapping("/addsupplier")
	public ModelAndView addsupplier()
	{
		ModelAndView mv=new ModelAndView("addsupplier","command",new Supplier());
	    return mv; 
	}
	
	@RequestMapping("/viewsupplier")
	public ModelAndView viewsupplier()
	{
		ModelAndView mv=new ModelAndView("viewsupplier");
		List<Supplier> list=supplierDAO.getAllSupplierData();
		mv.addObject("supplierlist", list);
	    return mv; 
	}
	
	@RequestMapping("/savesupplier")
	public ModelAndView saveSupplier(@ModelAttribute Supplier supplier)
	{
		supplierDAO.saveSupplier(supplier);
		return new ModelAndView("redirect:/viewsupplier");
	}
	
	@RequestMapping("/deletesupplier/{supplierid}")
	public ModelAndView deletesupplier(@PathVariable String supplierid)
	{
		Supplier supplier=supplierDAO.getSupplierById(supplierid);
		supplierDAO.deleteSupplier(supplier);
		return new ModelAndView("redirect:/viewsupplier");
	}
	
	@RequestMapping("/editsupplier/{supplierid}")
	public ModelAndView editsupplier(@PathVariable String supplierid)
	{
		Supplier supplier=supplierDAO.getSupplierById(supplierid);
		return new ModelAndView("editsupplier","command",supplier);
	}
	@RequestMapping("/editsavesupplier")
	public ModelAndView editsavesupplier(@ModelAttribute Supplier supplier)
	{
		supplierDAO.updateSupplier(supplier);
		return new ModelAndView("redirect:/viewsupplier");
	}
}
